AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: A simple stack for AWS Codepipeline.

Parameters:
  Stage:
    Description: 'Stage to which the resources will be deployed into.'
    Type: 'String'
    Default: 'dev'
  ProjectName:
    Description: 'The project that these resources are for.'
    Type: 'String'
    Default: ''
  ResourceGroup:
    Description: 'The resource group which these resources are part of.'
    Type: 'String'
    Default: ''
#  Subnets:
#    Description: Requires 2+ to meet availability zone coverage requirement.
#    Type: List<AWS::EC2::Subnet::Id>
#  SecurityGroupId:
#    Description: 'The Id of the security group to use for these functions.'
#    Type: 'String'
#    Default: ''

###########################################################################
#  Labelling
###########################################################################
#Metadata:
#  'AWS::CloudFormation::Interface':
#    ParameterGroups:
#      - Label:
#          default: General
#        Parameters:
#          - Stage
#          - ProjectName
#          - ResourceGroup
#      - Label:
#          default: Network Configuration
#        Parameters:
#          - Subnets
#          - SecurityGroupId

Resources:
  HelloWorldLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub "${Stage}-${ResourceGroup}-hello-world-function"
      Handler: hello_world.lambda_handler
      Runtime: python3.8
      CodeUri: src/hello_world.py
      Description: Says hello to world.
      MemorySize: 128
      Timeout: 100
      Role: !GetAtt HelloWorldRole.Arn
#      VpcConfig:
#        SecurityGroupIds:
#          - !Ref SecurityGroupId
#        SubnetIds: !Ref Subnets
      Tags:
        Stage: !Ref Stage
        ProjectName: !Ref ProjectName
        ResourceGroup: !Ref ResourceGroup

  HelloWorldRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${Stage}HelloWorldRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
      Tags:
        - Key: Stage
          Value: !Ref Stage
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: ResourceGroup
          Value: !Ref ResourceGroup
