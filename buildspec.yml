version: 0.2

env:
  variables:
    STAGE: "test"
    PROJECT_NAME: "tc"
    RESOURCE_GROUP: "pipeline"
    SECURITY_GROUP_ID: "sg-042fe4977cec8fce5"
    SUBNET_LIST: "subnet-cf6b85a9"
    BUCKET_NAME: "test-tc-pipeline-artifacts"

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
     - pip install aws-sam-cli
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.

#  pre_build:
#    commands:
#      - chmod +x ./deploy.sh

  build:
    commands:
      - export STACK_NAME="${STAGE}-${PROJECT_NAME}-${RESOURCE_GROUP}"
      - |
        sam package \
          --template-file template.yaml \
          --s3-bucket ${BUCKET_NAME} \
          --output-template-file packaged.yaml \
          --s3-prefix "${PROJECT_NAME}-${RESOURCE_GROUP}"
      - echo "Packaging complete."
      - |
        sam deploy \
          --template-file packaged.yaml \
          --stack-name ${STACK_NAME} \
          --parameter-overrides Stage=${STAGE} ProjectName=${PROJECT_NAME} ResourceGroup=${RESOURCE_GROUP} SecurityGroupId=${SECURITY_GROUP_ID} Subnets=${SUBNET_LIST}  \
          --s3-bucket ${BUCKET_NAME} \
          --s3-prefix "${PROJECT_NAME}-${RESOURCE_GROUP}" \
          --capabilities CAPABILITY_NAMED_IAM \
          --no-fail-on-empty-changeset \
          --tags Stage=${STAGE} ProjectName=${PROJECT_NAME} ResourceGroup=${RESOURCE_GROUP}
      - echo "Deployment complete."

  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
artifacts:
  files:
     - packaged.yaml
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths